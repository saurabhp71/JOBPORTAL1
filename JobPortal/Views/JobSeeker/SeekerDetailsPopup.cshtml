@model JobPortalLibrary.JobSeeker.SeekerUser
@{
    ViewBag.Title = "SeekerDetailsPopup";
}



@section Scripts {

    <link href="~/Scripts/chosen.min.css" rel="stylesheet" />
    <script src="~/Scripts/chosen.jquery.min.js"></script>
    @*<link href="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.6.2/chosen.min.css" rel="stylesheet" />*@
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.6.2/chosen.jquery.min.js"></script>*@

    <script type="text/javascript">

        $(function () {
            $("#language").chosen({
                width: "100%"

            });
        });
        /*Select Dropdown*/
        $(function () {
            $(".city").chosen({
                width: "100%"
            });
        });

    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
<style>
    .text-area {
        width: 100%;
        height: 80px;
        /* color: #3A3A3A;
        font-weight: bold;
        font-style: italic;*/
    }

    .Seeker {
        margin-left: 60px;
    }
    .col-md-3 {
        color: black;
        font-size: 18px;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="Seeker">
        <div class="item form-group">
            @Html.LabelFor(model => model.ProfileSummary, "Profile Summary", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ProfileSummary, new { @class = "text-area" })
                @Html.ValidationMessageFor(model => model.ProfileSummary, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="item form-group">

            <div class="col-md-6 col-sm-6 ">
                @Html.LabelFor(model => model.SeekerName, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align required" })
                @Html.EditorFor(model => model.SeekerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SeekerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="item form-group">
            @Html.LabelFor(model => model.AlternateContactNo, "ContactNo", htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align required" })
            <div class="col-md-6 col-sm-6 ">
                @Html.EditorFor(model => model.AlternateContactNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AlternateContactNo, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="item form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align required" })
            <div class="col-md-6 col-sm-6 ">
                @Html.Label("Male")
                @Html.RadioButtonFor(Model => Model.Gender, "Male")
                @Html.Label("Female")
                @Html.RadioButtonFor(model => model.Gender, "Female")
                @Html.Label("Transgender")
                @Html.RadioButtonFor(model => model.Gender, "Transgender")
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="item form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align required" })
            <div class="col-md-6 col-sm-6 ">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="item form-group">
            @Html.LabelFor(model => model.CorrespondenceAddress, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align required" })
            <div class="col-md-6 col-sm-6 ">
                @Html.EditorFor(model => model.CorrespondenceAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CorrespondenceAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="item form-group">
            @Html.LabelFor(model => model.PermanantAddress, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align required" })
            <div class="col-md-6 col-sm-6 ">
                @Html.EditorFor(model => model.PermanantAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PermanantAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="item form-group">
            @Html.LabelFor(model => model.CasteCategory, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align required" })
            <div class="col-md-6 col-sm-6 ">
                @Html.DropDownListFor(model => model.CasteCategory, new SelectList(ViewBag.Castlist), "--Select--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CasteCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="item form-group">
            @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align required" })
            <div class="col-md-6 col-sm-6 ">
                @Html.DropDownListFor(model => model.MaritalStatus, new SelectList(ViewBag.Maritiallist), "--Select--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="item form-group">
            @Html.LabelFor(model => model.PhysicallyChallenged, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align required" })
            <div class="col-md-6 col-sm-6 ">
                @Html.Label("Yes")
                @Html.RadioButtonFor(Model => Model.PhysicallyChallenged, "0")
                @Html.Label("No")
                @Html.RadioButtonFor(model => model.PhysicallyChallenged, "1")
                @Html.ValidationMessageFor(model => model.PhysicallyChallenged, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="item form-group">
            @Html.LabelFor(model => model.CityId, "Location", htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align required" })
            <div class="col-md-6 col-sm-6 ">
                @Html.DropDownList("CityId", null, "--Select Location--", htmlAttributes: new { @class = "form-control city" })
                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="item form-group">
            @Html.LabelFor(model => model.Pincode1, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align required" })
            <div class="col-md-6 col-sm-6 ">
                @Html.EditorFor(model => model.Pincode1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pincode1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="item form-group">
            @Html.LabelFor(model => model.LanguageId, "Select Language", htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align required" })
            <div class="col-md-6 col-sm-6 ">
                @Html.ListBoxFor(m => m.LanguageList, new MultiSelectList(ViewBag.LanguageId, "Value", "Text"), new { id = "language", Multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.LanguageId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group" style="margin-left:550px">
        <div class="col-md-offset-2 col-md-10">
            <button type="button" class="btn btn-default" data-dismiss="modal">CANCEL</button>
            <input type="submit" formaction="@Url.Action("SeekerDetailsPopup","JobSeeker",new  { Seekercode = Model.Seekercode })" value="SAVE" formmethod="post" class="btn btn-primary" />
        </div>
    </div>
}


